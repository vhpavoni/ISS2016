package view;

import Controle.GerenciarProduto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Iten;
import modelo.Produto;
import modelo.ProdutoVenda;

/**
 *
 * @author Tadashi
 */
public class TelaIncluirProduto extends javax.swing.JFrame {
    private TelaVenda venda;
    private ProdutoVenda produtoVenda;
            
    public TelaIncluirProduto(TelaVenda venda, ProdutoVenda pd) {
        this.venda = venda;
        produtoVenda = pd;
        
        initComponents();
        buttonGroup.add(radioCod);
        buttonGroup.add(radioMarca);
        buttonGroup.add(radioCategoria);
        radioCod.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        radioCod = new javax.swing.JRadioButton();
        radioCategoria = new javax.swing.JRadioButton();
        radioMarca = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        buscar = new javax.swing.JTextField();
        incluir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        qtde = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Incluir Produto");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label.setText("Código:");
        jPanel1.add(label, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 80, -1, -1));

        radioCod.setText("Código");
        radioCod.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioCodStateChanged(evt);
            }
        });
        jPanel1.add(radioCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 39, -1, -1));

        radioCategoria.setText("Categoria");
        radioCategoria.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioCategoriaStateChanged(evt);
            }
        });
        jPanel1.add(radioCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 39, -1, -1));

        radioMarca.setText("Marca");
        radioMarca.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioMarcaStateChanged(evt);
            }
        });
        jPanel1.add(radioMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 39, -1, -1));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Marca", "Modelo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela);
        tabela.getColumnModel().getColumn(0).setPreferredWidth(20);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 115, 362, 123));

        jLabel1.setText("Procurar por:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 11, -1, -1));

        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarKeyPressed(evt);
            }
        });
        jPanel1.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 77, 300, -1));

        incluir.setText("Incluir");
        incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incluirActionPerformed(evt);
            }
        });
        jPanel1.add(incluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, -1, -1));

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, -1, -1));

        jLabel2.setText("Quantidade:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 264, -1, -1));

        qtde.setText("1");
        jPanel1.add(qtde, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 261, 31, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void radioCategoriaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioCategoriaStateChanged
        if(radioCategoria.isSelected()){
            label.setText("Categoria:");
        }
    }//GEN-LAST:event_radioCategoriaStateChanged

    private void radioCodStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioCodStateChanged
        if(radioCod.isSelected()){
            label.setText("Código:");
        }
    }//GEN-LAST:event_radioCodStateChanged

    private void radioMarcaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioMarcaStateChanged
        if(radioMarca.isSelected()){
            label.setText("Marca:");
        }
    }//GEN-LAST:event_radioMarcaStateChanged

    private void buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyPressed
        List<Produto> produtos = new ArrayList<Produto>();
        switch (label.getText()){
            case "Código:":
                try{
                    Long cod = Long.parseLong(buscar.getText());
                    produtos.add(GerenciarProduto.buscarProduto(cod));
                }catch(Exception e){
                }
                break;
            case "Categoria:":
                produtos = GerenciarProduto.buscarPorCategoria(buscar.getText());
                break;
            case "Marca:":
                produtos = GerenciarProduto.buscarPorMarca(buscar.getText());
                break;
        }
        int i = 0;
        DefaultTableModel tableModel = (DefaultTableModel)tabela.getModel();
        tableModel.setNumRows(0);
        Object[] linha = {null};
        
        for (Produto prod : produtos){
            if(prod != null && !prod.isRemovido()){
                tableModel.addRow(linha);
                tabela.setValueAt(prod.getCod(), i, 0);
                tabela.setValueAt(prod.getCategoria(), i, 1);
                tabela.setValueAt(prod.getMarca(), i, 2);
                tabela.setValueAt(prod.getModelo(), i, 3);
                i++;
            }
        }
        if (i < 6){
            for (i=i; i<6; i++){
                tableModel.addRow(linha);
            }
        }
    }//GEN-LAST:event_buscarKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void incluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incluirActionPerformed
        boolean achou = false;
        Produto prod = null;
        int i;
        int index;
        try{
            Integer.parseInt(qtde.getText());
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Valor inválido no campo [Quantidade]");
            return;
        }
        //verificar se tem o produto selecionado
        if (tabela.getSelectedRow() != -1){
            int linha = tabela.getSelectedRow();
            if (tabela.getValueAt(linha, 0) != null){
                prod = GerenciarProduto.buscarProduto((Long)tabela.getValueAt(linha, 0));
                //verificar se o produto selecionado ja esta incluido na venda
                for(i = 0; i < venda.getTabela().getRowCount(); i++){
                    if (venda.getTabela().getValueAt(i, 0) != null && venda.getTabela().getValueAt(i, 0).equals(prod.getCod())){
                        achou = true;
                    }
                }
            }
            //produto novo para a venda
            if (!achou){
                if (Integer.parseInt(qtde.getText()) > prod.getEstoque()){
                    JOptionPane.showMessageDialog(null, "Estoque disponível "+prod.getEstoque());
                    return;
                }
                int lin = 0;
                Iten iten = new Iten(prod.getCod(), Long.parseLong(qtde.getText()), produtoVenda);
                produtoVenda.getItens().add(iten);
                if (produtoVenda.getItens().size() <= 9){
                    for (i = 0; i < venda.getTabela().getRowCount(); i++){
                        if (venda.getTabela().getValueAt(i, 0) == null){
                            lin = i;
                            break;
                        }
                    }
                    venda.getTabela().setValueAt(prod.getCod(), lin, 0);
                    venda.getTabela().setValueAt(prod.getCategoria(), lin, 1);
                    venda.getTabela().setValueAt(prod.getMarca(), lin, 2);
                    venda.getTabela().setValueAt(prod.getModelo(), lin, 3);
                    venda.getTabela().setValueAt(prod.getPreco(), lin, 4);
                    venda.getTabela().setValueAt(qtde.getText(), lin, 5);
                }else{
                    DefaultTableModel tableModel = (DefaultTableModel)venda.getTabela().getModel();
                    tableModel.addRow(new Object[]{null});
                    venda.getTabela().setValueAt(prod.getCod(), venda.getTabela().getModel().getRowCount()-1, 0);
                    venda.getTabela().setValueAt(prod.getCategoria(), venda.getTabela().getModel().getRowCount()-1, 1);
                    venda.getTabela().setValueAt(prod.getMarca(), venda.getTabela().getModel().getRowCount()-1, 2);
                    venda.getTabela().setValueAt(prod.getModelo(), venda.getTabela().getModel().getRowCount()-1, 3);
                    venda.getTabela().setValueAt(prod.getPreco(), venda.getTabela().getModel().getRowCount()-1, 4);
                    venda.getTabela().setValueAt(qtde.getText(), venda.getTabela().getModel().getRowCount()-1, 5);
                }
                JOptionPane.showMessageDialog(null, "Produto Incluido com sucesso!");
                //produto ja inserido na venda
            } else {
                Iten iten = produtoVenda.getIten(prod.getCod());
                if (Integer.parseInt(qtde.getText())+iten.getQtde() > prod.getEstoque()){
                    JOptionPane.showMessageDialog(null, "Estoque disponível "+prod.getEstoque());
                    return;
                }
                iten.setQtde(iten.getQtde()+Integer.parseInt(qtde.getText()));
 
                for (i = 0; i < venda.getTabela().getRowCount(); i++){
                    Long var = (Long)venda.getTabela().getValueAt(i, 0);
                    if (var.equals(prod.getCod())){
                        int quantidade = Integer.parseInt((String.valueOf(venda.getTabela().getValueAt(i, 5))));
                        venda.getTabela().setValueAt(quantidade + Integer.parseInt(qtde.getText()),i, 5);
                        break;
                    }
                }
                JOptionPane.showMessageDialog(null, "Produto Incluido com sucesso!");
            }
        }
    }//GEN-LAST:event_incluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[], final TelaVenda venda, final ProdutoVenda pd) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaIncluirProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaIncluirProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaIncluirProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaIncluirProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaIncluirProduto(venda, pd).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscar;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton incluir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JTextField qtde;
    private javax.swing.JRadioButton radioCategoria;
    private javax.swing.JRadioButton radioCod;
    private javax.swing.JRadioButton radioMarca;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
